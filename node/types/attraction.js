var bot     = null;
var User    = null;
var h       = null;

function privateInit(initPlagins) {
    bot     = initPlagins.bot;
    User    = initPlagins.User;
    h       = initPlagins.helper_functions;
}

module.exports = {
    init:function(initPlagins)
    {
        privateInit(initPlagins);
    },
    url,
    howmany,
    requisites,
    reqezits,
    startFun,
    startFunMore,
    start_reqezits,
    actionReqezits,
}

async function startFunMore(msg)
{
    await User.findOneAndUpdate({user: msg.from.id}, {attractType: 2});

    var _array          = [];

    var html = `<strong>${msg.from.first_name} ${msg.from.last_name}</strong> –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ investER. –í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –Ω–∞—à–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –±–∏–∑–Ω–µ—Å-–ø—Ä–æ–µ–∫—Ç–æ–≤.`;
    html += "\n\n–ü–µ—Ä–µ—à–ª–∏—Ç–µ –≤–∞—à—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –ë–ò–ó–ù–ï–°–£ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –æ–∫–∞–∂–µ—Ç—Å—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–º –∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á–µ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–º –≤—Å–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è, –ø—Ä–æ–µ–∫—Ç –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω –Ω–∞ investER, –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –∑–∞ –í–ê–ú–ò –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç 0,5% –¥–æ 2,5% —Å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –≤ –ø—Ä–æ–µ–∫—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.";
    html += "\n\n–ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Å–±–æ—Ä—É —Å—Ä–µ–¥—Å—Ç–≤ –≤ –ø—Ä–æ–µ–∫—Ç –Ω–∞ –∫–∞–Ω–∞–ª–µ, –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ, –∞ —Ç–∞–∫–∂–µ –º—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–±—Ä–∞–Ω–Ω–æ–π —Å—É–º–º—ã –∏ –≤–∞—à–µ–º –±–æ–Ω—É—Å–µ.";
    html += "\n\n–ß—Ç–æ–±—ã –±–æ–Ω—É—Å –ø—Ä–∏—à–µ–ª –∫ –≤–∞–º –Ω–∞ –∫–∞—Ä—Ç—É, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É —Ä–µ–∫–≤–∏–∑–∏—Ç—ã";

    var fat = await bot.sendMessage(msg.chat.id, html, {
        parse_mode: "HTML",
        reply_markup: {
            "resize_keyboard": true,
            "keyboard": [["üîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", "üôã‚Äç‚ôÇÔ∏è –ú–Ω–æ—é –ø—Ä–∏–≤–ª–µ—á–µ–Ω–æ"], ["üí≥ –†–µ–∫–≤–µ–∑–∏—Ç—ã","üîÅ –°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"]],
        }
    });
    _array.push(fat.message_id);
    await h.DMA(msg, _array);
}

async function startFun(msg)
{
    await User.findOneAndUpdate({user: msg.from.id}, {attractType: 1});
    
    var _array          = [];
    var html = `<strong>${msg.from.first_name} ${msg.from.last_name}</strong> –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ investER. –í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –Ω–∞—à–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.\n\n–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –Ω–∞ investER –ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞ (–≤ —Å–ª–æ–≤–æ –∑–∞—à–∏—Ç–∞ —Å—Å—ã–ª–∫–∞) –∏–ª–∏ –≤–∞—à—É –ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É. –ò –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å –∫–∞–∂–¥–æ–π –∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏. –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –í–∞–º–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä –±—É–¥–µ—Ç –∑–∞ –≤–∞–º–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞ –∏ –∑–∞ –∫–∞–∂–¥—É—é –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—é –≤ –ª—é–±—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å.\n\n–ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å –≤ –∫–∞–∂–¥–æ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ —Ä–∞–∑–Ω—ã–π, –æ—Ç 0,5 - –¥–æ 10% –æ—Ç —Å—É–º–º—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –í–∞–º–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä –ø—Ä–æ–∏–Ω–≤–µ—Å—Ç–∏—Ä—É–µ—Ç, –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞—Ç–æ–π, (–∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è), —Å—É–º–º–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏ –±–æ–Ω—É—Å–æ–º –¥–ª—è –≤–∞—Å.\n\n–ß—Ç–æ–± –±–æ–Ω—É—Å –ø—Ä–∏—à–µ–ª –∫ –≤–∞–º –Ω–∞ –∫–∞—Ä—Ç—É, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É —Ä–µ–∫–≤–∏–∑–∏—Ç—ã`;
    var fat = await bot.sendMessage(msg.chat.id, html, {
        parse_mode: "HTML",
        reply_markup: {
            "resize_keyboard": true,
            "keyboard": [["üîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", "üôã‚Äç‚ôÇÔ∏è –ú–Ω–æ—é –ø—Ä–∏–≤–ª–µ—á–µ–Ω–æ"], ["üí≥ –†–µ–∫–≤–µ–∑–∏—Ç—ã","üîÅ –°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"]],
        }
    });
    _array.push(fat.message_id);
    await h.DMA(msg, _array);
}

function howmany(msg) {
    var html = `<strong>${msg.from.first_name} ${msg.from.last_name}</strong>\n\n–í—ã –µ—â–µ –Ω–µ –ø—Ä–∏–≤–µ–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`;
    h.send_html(msg.chat.id, html, 
    {
        "resize_keyboard": true,
        "keyboard": [["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]],
    });
}

async function url(msg) 
{
    var _User = await User.findOne({user: msg.from.id});

    if(_User.attractType == 1)
    {
        var _array  = [];
        var _url = `https://t.me/invester_official_bot?start=adder_${msg.from.id}`;
        var html = `<strong>${msg.from.first_name} ${msg.from.last_name}</strong> –¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π\n\n${_url}`;
        var fat = await h.send_html(msg.chat.id, html, 
        {
            "resize_keyboard": true,
            "keyboard": [["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]],
        });
        _array.push(fat.message_id);
        await h.DMA(msg, _array);
    } else 
    {
        var _array  = [];
        var _User   = await User.findOne({user: msg.from.id});
    
        var html = "–î–µ–ª–∏—Ç–µ—Å—å —Å –±–∏–∑–Ω–µ—Å-–ø—Ä–æ–µ–∫—Ç–∞–º–∏ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π. –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã, –ø—Ä–æ—à–µ–¥—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ investER, –±—É–¥—É—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω—ã –∑–∞ –≤–∞–º–∏";
        var fat = await h.send_html(msg.from.id, html, {
            "resize_keyboard": true,
            "keyboard": [
                ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]
            ],
        });
    
        _array.push(fat.message_id)
    
        var html = `–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ –∞–¥–º–∏–Ω–∫–µ –º–∞—Ä–∫–∏—Ä—É—é—Ç—Å—è –∫–∞–∫ –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–µ –æ—Ç –±–∏–∑–Ω–µ—Å-–±—Ä–æ–∫–µ—Ä–∞ –∏ –∑–∞–∫—Ä–µ–ø–ª—è—é—Ç—Å—è –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º.`;
        var _url = `${h.getURL()}?user=${_User._id}&page=ref_url`;
    
        var fat = await h.send_html(msg.from.id, html, {
            "inline_keyboard": [
                [
                    {
                        text: "–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É üìù",
                        url: _url
                    }
                ]
            ],
        });
        _array.push(fat.message_id)
    
        await h.DMA(msg, _array);
    }
}

var reqezitsType = 
{
    "–Æ—Ä.–ª–∏—Ü–æ": 
    [
        {
            id: "name",
            name: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä.–ª–∏—Ü–∞"
        },
        {
            id: "fio",
            name: "–§–ò–û –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ª–∏—Ü–∞"
        },
    ],
    "–ò–ü": 
    [
        {
            id: "inn",
            name: "–ò–ù–ù"
        },
        {
            id: "fio",
            name: "–§–ò–û"
        },
    ],
    "–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π": 
    [
        {
            id: "inn",
            name: "–ò–ù–ù"
        },
        {
            id: "fio",
            name: "–§–ò–û"
        },
        {
            id: "data",
            name: "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"
        },
        {
            id: "passport",
            name: "–°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞"
        }
    ],
}

async function actionReqezits(msg) 
{
    var _User                       = await User.findOne({user: msg.from.id});
    var _array                      = _User.reqezits_data;
    if(!_array) _array              = {};
    _array[_User.where.type_more]   = msg.text;
    await User.findOneAndUpdate({user: msg.from.id}, {reqezits_data: _array});
    var index = reqezitsType[_User.reqezits_data.type].indexOf(el => {el.id == _User.where.type_more});
    start_reqezits(msg, index);
}

async function start_reqezits(msg, _need_button)
{
    var _array                      = [];
    var _User                       = await User.findOne({user: msg.from.id});
    var _buttons                    = reqezitsType[_User.reqezits_data.type];
    var _reqezits_data              = _User.reqezits_data;
    var need_button                 = 0;
    var _where                      = _User.where;

    if(_User.where.msg)
    {
        await bot.deleteMessage(msg.from.id, _User.where.msg); 
    }

    if(_need_button || _need_button == 0) 
    {
        need_button                 = _need_button
    } else {
        need_button                 = h._GET(msg.data, "data");
        need_button = Number(need_button);
        if(need_button < 0) {
            need_button = 0;
        }
        if(need_button >= _buttons.length) {
            need_button = _buttons.length - 1;
        }
    }

    var html        = `–î–ª—è <strong>${_User.reqezits_data.type}</strong> –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ:\n\n`;

    _buttons.forEach((element, i) => 
    {
        var strong          = '';
        var strong_second   = '';
        var dataBlock       = '[–ù–µ –∑–∞–¥–∞–Ω–æ]';
        var smile           = '‚ùå';

        if(i == need_button) {
            strong          = '<strong>*';
            strong_second   = '*</strong>\n';
        }

        if(_reqezits_data[element.id]) {
            dataBlock = _reqezits_data[element.id];
            smile = '‚úÖ';
        }
        
        html = html + `${smile} ${strong} ${element.name}:   ${dataBlock} ${strong_second}\n`;
    })

    var fat = await h.send_html(msg.from.id, html, {
        "inline_keyboard": [
            [
                {
                    text: '‚¨áÔ∏è',
                    callback_data: `place=attraction_reqezits&type=button&data=${need_button + 1}`,
                },
                {
                    text: '‚¨ÜÔ∏è',
                    callback_data: `place=attraction_reqezits&type=button&data=${need_button - 1}`,
                },
                {
                    text: '‚û°Ô∏è',
                    callback_data: `place=attraction_reqezits_more`,
                }
            ]
        ],
    });
    _array.push(fat.message_id);

    console.log(_buttons[need_button]);
    console.log(need_button);

    _where.type         = 'actionReqezits';
    _where.msg          = fat.message_id;
    _where.type_more    = _buttons[need_button].id;

    await User.findOneAndUpdate({user: msg.from.id}, {where: _where})

    await h.MA(msg, _array);
}

async function reqezits(msg)
{
    var _array          = [];
    var _User           = await User.findOne({user: msg.from.id});
    var _reqezits_data  = {};

    if(_User.reqezits_data)
    {
        _reqezits_data = _User.reqezits_data;
    }

    var html    = `<strong>${msg.from.first_name} ${msg.from.last_name}</strong> –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç—Å–∫–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–π. –û–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –ª–∏—Ü–∞–º–∏, –∏–º–µ—é—â–∏–º–∏ —Å—Ç–∞—Ç—É—Å —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã–π, –ò–ü –∏–ª–∏ —é—Ä.–ª–∏—Ü–æ.`;
    var fat     = await h.send_html(msg.chat.id, html, 
    {
        "resize_keyboard": true,
        "keyboard": [ 
            ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]
        ],
    });
    _array.push(fat.message_id);
    await h.DMA(msg, _array);

    _reqezits_data.type = msg.text;

    await User.findOneAndUpdate({user: msg.from.id}, { where: {
        type: "attraction",
        msg: fat._id,
    },
        reqezits_data: _reqezits_data,
    });

    start_reqezits(msg, 0);
}

async function requisites(msg) 
{
    var _array  = [];
    var _User   = await User.findOne({user: msg.from.id});

    if(!_User.reqvesits)
    {
        var _User = await User.findOne({ user: msg.from.id });
        var _array  = [];
        var html = `<strong>${msg.from.first_name} ${msg.from.last_name}</strong> –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç—Å–∫–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–π. –û–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –ª–∏—Ü–∞–º–∏, –∏–º–µ—é—â–∏–º–∏ —Å—Ç–∞—Ç—É—Å —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã–π, –ò–ü –∏–ª–∏ —é—Ä.–ª–∏—Ü–æ.`;
        var fat = await h.send_html(msg.chat.id, html, 
        {
            "resize_keyboard": true,
            "keyboard": [ 
                ['–Æ—Ä.–ª–∏—Ü–æ', '–ò–ü', "–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π"],
                ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]
            ],
        });
        _array.push(fat.message_id);
        var html = `–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∏–ø:`;
        var fat = await h.send_html(msg.chat.id, html);
        _array.push(fat.message_id);
        await h.DMA(msg, _array);
    
        await User.findOneAndUpdate({user: msg.from.id}, { where: {
            type: "attraction",
        }});
    } else
    {
        var html = `–ò–Ω–≤–µ—Å—Ç–æ—Ä ${_User.first_name}\n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é "–†–ï–ö–í–ò–ó–ò–¢–´"`;
        var fat = await bot.sendMessage(msg.chat.id, toEscapeMSg(html), {
            parse_mode: "html",
            reply_markup: {  
                "resize_keyboard": true, 
                "keyboard": [
                    ["‚úîÔ∏è –ü—Ä–∏–Ω—è—Ç—å —Ä–µ–∫–≤–µ–∑–∏—Ç—ã", "‚úèÔ∏è –ó–∞–º–µ–Ω–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã"],
                    ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]
                ],                                                                   
            }
        });
        _array.push(fat.message_id);
    
        await h.DMA(msg, _array);
    }
}